// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lol_rotation_tracker;

#nullable disable

namespace lol_rotation_tracker.Migrations
{
    [DbContext(typeof(LeagueChampions))]
    partial class LeagueChampionsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("lol_rotation_tracker.ChampionDto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("GameVersionVersion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameVersionVersion");

                    b.ToTable("Champions");
                });

            modelBuilder.Entity("lol_rotation_tracker.GameVersion", b =>
                {
                    b.Property<string>("Version")
                        .HasColumnType("TEXT");

                    b.HasKey("Version");

                    b.ToTable("Versions");
                });

            modelBuilder.Entity("lol_rotation_tracker.ChampionDto", b =>
                {
                    b.HasOne("lol_rotation_tracker.GameVersion", null)
                        .WithMany("Champions")
                        .HasForeignKey("GameVersionVersion");
                });

            modelBuilder.Entity("lol_rotation_tracker.GameVersion", b =>
                {
                    b.Navigation("Champions");
                });
#pragma warning restore 612, 618
        }
    }
}
